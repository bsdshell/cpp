#include<iostream>
#include<vector>
#include "mywatch.h"

//#include "boost/multi_array.hpp"
//#include <cassert>

int main()
{
    std::cout<<"C++ Sudoku Solver"<<std::endl;
    int board[81] = 
    {
        0,0,0,2,0,0,0,0,0,
        0,0,0,1,0,7,0,0,0,
        0,0,6,0,3,0,5,0,0,
        0,0,0,0,0,9,0,8,0,
        0,0,0,0,2,0,0,0,4,
        0,0,0,8,0,0,0,5,0,
        0,0,9,0,4,0,3,0,1,
        0,0,0,7,0,2,0,0,0,
        0,0,0,0,0,8,0,0,6
    };

    int board3d[9*9*9] = 
    {
        0,0,0,2,0,0,0,0,0,
        0,0,0,1,0,7,0,0,0,
        0,0,6,0,3,0,5,0,0,
        0,0,0,0,0,9,0,8,0,
        0,0,0,0,2,0,0,0,4,
        0,0,0,8,0,0,0,5,0,
        0,0,9,0,4,0,3,0,1,
        0,0,0,7,0,2,0,0,0,
        0,0,0,0,0,8,0,0,6,

        0,0,0,2,0,0,0,0,0,
        0,0,0,1,0,7,0,0,0,
        0,0,6,0,3,0,5,0,0,
        0,0,0,0,0,9,0,8,0,
        0,0,0,0,2,0,0,0,4,
        0,0,0,8,0,0,0,5,0,
        0,0,9,0,4,0,3,0,1,
        0,0,0,7,0,2,0,0,0,
        0,0,0,0,0,8,0,0,6,

        0,0,0,2,0,0,0,0,0,
        0,0,0,1,0,7,0,0,0,
        0,0,6,0,3,0,5,0,0,
        0,0,0,0,0,9,0,8,0,
        0,0,0,0,2,0,0,0,4,
        0,0,0,8,0,0,0,5,0,
        0,0,9,0,4,0,3,0,1,
        0,0,0,7,0,2,0,0,0,
        0,0,0,0,0,8,0,0,6,

        0,0,0,2,0,0,0,0,0,
        0,0,0,1,0,7,0,0,0,
        0,0,6,0,3,0,5,0,0,
        0,0,0,0,0,9,0,8,0,
        0,0,0,0,2,0,0,0,4,
        0,0,0,8,0,0,0,5,0,
        0,0,9,0,4,0,3,0,1,
        0,0,0,7,0,2,0,0,0,
        0,0,0,0,0,8,0,0,6,

        0,0,0,2,0,0,0,0,0,
        0,0,0,1,0,7,0,0,0,
        0,0,6,0,3,0,5,0,0,
        0,0,0,0,0,9,0,8,0,
        0,0,0,0,2,0,0,0,4,
        0,0,0,8,0,0,0,5,0,
        0,0,9,0,4,0,3,0,1,
        0,0,0,7,0,2,0,0,0,
        0,0,0,0,0,8,0,0,6,

        0,0,0,2,0,0,0,0,0,
        0,0,0,1,0,7,0,0,0,
        0,0,6,0,3,0,5,0,0,
        0,0,0,0,0,9,0,8,0,
        0,0,0,0,2,0,0,0,4,
        0,0,0,8,0,0,0,5,0,
        0,0,9,0,4,0,3,0,1,
        0,0,0,7,0,2,0,0,0,
        0,0,0,0,0,8,0,0,6,

        0,0,0,2,0,0,0,0,0,
        0,0,0,1,0,7,0,0,0,
        0,0,6,0,3,0,5,0,0,
        0,0,0,0,0,9,0,8,0,
        0,0,0,0,2,0,0,0,4,
        0,0,0,8,0,0,0,5,0,
        0,0,9,0,4,0,3,0,1,
        0,0,0,7,0,2,0,0,0,
        0,0,0,0,0,8,0,0,6,

        0,0,0,2,0,0,0,0,0,
        0,0,0,1,0,7,0,0,0,
        0,0,6,0,3,0,5,0,0,
        0,0,0,0,0,9,0,8,0,
        0,0,0,0,2,0,0,0,4,
        0,0,0,8,0,0,0,5,0,
        0,0,9,0,4,0,3,0,1,
        0,0,0,7,0,2,0,0,0,
        0,0,0,0,0,8,0,0,6,

        0,0,0,2,0,0,0,0,0,
        0,0,0,1,0,7,0,0,0,
        0,0,6,0,3,0,5,0,0,
        0,0,0,0,0,9,0,8,0,
        0,0,0,0,2,0,0,0,4,
        0,0,0,8,0,0,0,5,0,
        0,0,9,0,4,0,3,0,1,
        0,0,0,7,0,2,0,0,0,
        0,0,0,0,0,8,0,0,6
    };

    for(int c=0; c<9; c++){
        for(int r=0; r<9; r++){
            std::cout<<"["<<board[c*9+r]<<"]";
        }
        std::cout<<std::endl;
    }

    for(int d=0; d<9; d++){
        for(int c=0; c<9; c++){
            for(int r=0; r<9; r++){
                std::cout<<"["<<board3d[9*9*d + c*9+r]<<"]";
            }
            std::cout<<std::endl;
        }
        std::cout<<std::endl;
    }

}

